---
import { Badge } from "@/components/ui/badge";
import { Card, CardContent, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Icons } from "@/components/icons";
import { cn } from "@/lib/utils";

interface Props {
    title: string;
    href?: string;
    description: string;
    dates: string;
    tags: readonly string[];
    link?: string;
    image?: string;
    video?: string;
    links?: readonly {
        icon: string;
        type: string;
        href: string;
    }[];
    className?: string;
}

const { title, href, description, dates, tags, link, image, links, className } = Astro.props;
---

<a href={href || "#"} class={cn("block cursor-pointer", className)}>
    <Card className={"flex flex-col overflow-hidden border hover:shadow-lg transition-all duration-300 ease-out h-full"}>
        {image && <img src={image} alt={title} width={500} height={300} class="h-40 w-full overflow-hidden object-cover object-top" />}
        <CardHeader className="px-2">
            <div class="space-y-1">
                <CardTitle className="mt-1 text-base">{title}</CardTitle>
                {/* <time className="font-sans text-xs">{dates}</time> */}
                <div class="hidden font-sans text-xs underline print:visible">{link?.replace("https://", "").replace("www.", "").replace("/", "")}</div>
                <p class="prose max-w-full text-pretty font-sans text-xs text-muted-foreground dark:prose-invert">{description}</p>
            </div>
        </CardHeader>
        <CardContent className="mt-auto flex flex-col px-2">
            {
                tags && tags.length > 0 && (
                    <div class="mt-2 flex flex-wrap gap-1">
                        {tags?.map((tag) => (
                            <Badge className="px-1 py-0 text-[10px]" variant="secondary">
                                {tag}
                            </Badge>
                        ))}
                    </div>
                )
            }
        </CardContent>
        <CardFooter className="px-2 pb-2">
            {
                links && links.length > 0 && (
                    <div class="flex flex-row flex-wrap items-start gap-1">
                        {links?.map((link) => {
                            const Icon = Icons[link.icon as keyof typeof Icons];
                            return (
                                <a href={link?.href} target="_blank" onclick="event.stopPropagation()">
                                    <Badge className="flex gap-2 px-2 py-1 text-[10px]">
                                        <Icon className="size-3" />
                                        {link.type}
                                    </Badge>
                                </a>
                            );
                        })}
                    </div>
                )
            }
        </CardFooter>
    </Card>
</a>
